name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  infra:
    name: Terraform Infra
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra

    steps:
      # Checkout repo
      - uses: actions/checkout@v3

      # Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      # Terraform Init
      - name: Terraform Init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

      # Terraform Apply
      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

  build-and-deploy:
    name: Build & Deploy Apps
    runs-on: ubuntu-latest
    needs: infra
    strategy:
      matrix:
        project: [frontend, backend]
    defaults:
      run:
        working-directory: ${{ matrix.project }}

    steps:
      # Checkout repo
      - uses: actions/checkout@v3

      # Setup Node.js 20
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Instalar dependencias
      - name: Install dependencies
        run: npm install

      # Build del proyecto
      - name: Build project
        run: |
          if [ "${{ matrix.project }}" == "frontend" ]; then
            echo "Skip Angular build, creating test index.html"
          else
            npm run build
          fi

      # Login a Azure
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret": "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}",
              "tenantId": "${{ secrets.AZURE_TENANT_ID }}"
            }

      # Preparar backend para deploy
      - name: Prepare backend for deploy
        if: matrix.project == 'backend'
        run: |
          mkdir dist-deploy
          cp -r dist/* dist-deploy/
          cp package*.json dist-deploy/
          cd dist-deploy
          npm install --production

      # Preparar frontend con un index.html bÃ¡sico
      - name: Prepare front for deploy
        if: matrix.project == 'frontend'
        run: |
          mkdir dist-front
          cat > dist-front/index.html <<EOL
          <!DOCTYPE html>
          <html>
          <head>
            <title>Frontend Test</title>
          </head>
          <body>
            <h1>Hola desde Azure Frontend ðŸš€</h1>
            <p>Si ves esto, el deploy funciona correctamente.</p>
          </body>
          </html>
          EOL

      # Deploy Backend
      - name: Deploy Backend
        if: matrix.project == 'backend'
        uses: azure/webapps-deploy@v2
        with:
          app-name: backend-affi-64376
          package: dist-deploy

      # Deploy Frontend
      - name: Deploy Frontend
        if: matrix.project == 'frontend'
        uses: azure/webapps-deploy@v2
        with:
          app-name: frontend-affi-64376
          package: dist-front
